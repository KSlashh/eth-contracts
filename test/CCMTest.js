const { ethers } = require("hardhat");
const hre = require("hardhat");
const fs = require("fs");
const crypto = require("crypto");
const Web3 = require("web3");
const { expect } = require("chai");
const bytes = require("@ethersproject/bytes");
hre.web3 = new Web3(hre.network.provider);

describe("CCMtest", async function () {

  let empty32 = '0x0000000000000000000000000000000000000000000000000000000000000000';
  let empty20 = '0x0000000000000000000000000000000000000000';
  let deployer;
  let addr1;
  let addr2;
  let eccd;
  let factory;
  let ccmi;
  let ccmp;
  let ccm;
  let caller;
  let calleri;
  let callerp;

  describe("initialize", function () {
    it("Should do deployment ",async function () {
      [deployer,addr1,addr2] = await hre.ethers.getSigners();

      await hre.run('compile');
      
      // deploy EthCrossChainData
      const ECCD = await hre.ethers.getContractFactory("EthCrossChainData");
      eccd = await ECCD.deploy();
      await eccd.deployed();
      
      // deploy CallerFactory
      const CallerFactory = await hre.ethers.getContractFactory("CallerFactory");
      factory = await CallerFactory.deploy([]);
      await factory.deployed();
      
      // update Const.sol
      await updateConst(eccd.address, factory.address);
      await hre.run('compile');
      
      // deploy EthCrossChainManagerImplementation
      const CCM = await hre.ethers.getContractFactory("EthCrossChainManagerImplementation");
      ccmi = await CCM.deploy();
      await ccmi.deployed();
        
      // deploy EthCrossChainManager
      const CCMP = await hre.ethers.getContractFactory("EthCrossChainManager");
      ccmp = await CCMP.deploy(ccmi.address,deployer.address,'0x');
      await ccmp.deployed();

      ccm = await CCM.attach(ccmp.address);
    });

    it("Should transfer eccd's owner", async function () {
      expect(await eccd.owner()).to.equal(deployer.address);
      await eccd.transferOwnership(ccm.address);
      expect(await eccd.owner()).to.equal(ccm.address);
    });
  });

  describe("ProxyFactory", function () {

    it("Should deploy caller implemetaion & caller", async function () {
      // deploy caller implementation
      const Caller = await hre.ethers.getContractFactory("EthCrossChainCaller");
      const CallerMock = await hre.ethers.getContractFactory("CallerImplementationMock");
      calleri = await CallerMock.deploy();
      await calleri.deployed();
      
      let salt = 77777;
      let preCalcAddress = await factory.getDeploymentAddress(salt, addr1.address);
      expect(await factory.isChild(preCalcAddress)).to.equal(false);
      // deploy caller ,  initialize(address).selector = 0xc4d66de8
      await factory.connect(addr1).deploy(salt, calleri.address, addr1.address, '0xc4d66de8000000000000000000000000'+ccm.address.slice(2));

      expect(await factory.isChild(preCalcAddress)).to.equal(true);
      expect(await factory.isChild(calleri.address)).to.equal(false);

      caller = await CallerMock.attach(preCalcAddress);
      callerp = await Caller.attach(preCalcAddress);

      expect(await caller.connect(addr2).whoAmI()).to.equal(1);
    });

    it("Should deploy caller via signature", async function () {
      const CallerSigMsgGen = await hre.ethers.getContractFactory("CallerSigMsgGen");
      let smg = await CallerSigMsgGen.deploy();
      let salt = 66666;
      let logic = calleri.address;
      let admin = addr2.address;
      let data = '0xc4d66de8000000000000000000000000'+ccm.address.slice(2);
      let signer = addr2;
      let msg = await smg.getSigMsg(salt, logic, admin, data, factory.address);
      let sig = await signer.signMessage(bytes.arrayify(msg));
      let preCalcAddress = await factory.getDeploymentAddress(salt, signer.address);
      expect(await factory.isChild(preCalcAddress)).to.equal(false);
      await factory.connect(addr1).deploySigned(salt, logic, admin, data, sig);
      expect(await factory.isChild(preCalcAddress)).to.equal(true);
    });

    it("Should not get correct caller while deploy via fake signature", async function () {
      const CallerSigMsgGen = await hre.ethers.getContractFactory("CallerSigMsgGen");
      let smg = await CallerSigMsgGen.deploy();
      let salt_fake = 1234;
      let salt = 1111;
      let logic = calleri.address;
      let admin = addr2.address;
      let data = '0xc4d66de8000000000000000000000000'+ccm.address.slice(2);
      let signer = addr2;
      let msg = await smg.getSigMsg(salt_fake, logic, admin, data, factory.address);
      let sig = await signer.signMessage(msg);
      let preCalcAddress = await factory.getDeploymentAddress(salt, signer.address);
      expect(await factory.isChild(preCalcAddress)).to.equal(false);
      await factory.connect(addr1).deploySigned(salt, logic, admin, data, sig);
      expect(await factory.isChild(preCalcAddress)).to.equal(false);
    });

    it("Should fail if not admin try to set implementation", async function () {
      await expect(callerp.connect(addr2).upgradeTo(ccmi.address)).to.be.reverted;
    });

    it("Should success if admin try to set implementation", async function () {
      const CallerMock2 = await hre.ethers.getContractFactory("CallerImplementationMock_2");
      calleri2 = await CallerMock2.deploy();
      await calleri2.deployed();
      await callerp.connect(addr1).upgradeTo(calleri2.address);
      expect(await caller.connect(addr2).whoAmI()).to.equal(2);
      await callerp.connect(addr1).upgradeTo(calleri.address);
      expect(await caller.connect(addr2).whoAmI()).to.equal(1);
    });

    it("Should fail if not admin try to change admin", async function () {
      await expect(callerp.connect(addr2).changeAdmin(addr2.address)).to.be.reverted;
    });

    it("Should success if admin try to change admin", async function () {
      await callerp.connect(addr1).changeAdmin(addr2.address);
      await expect(callerp.connect(addr1).changeAdmin(addr1.address)).to.be.reverted;
      await callerp.connect(addr2).changeAdmin(addr1.address);
    });
  });

  describe("EthCrossChainManager", function () {
    
    // upgradeTo
    it("Should fail if not admin try to set implementation", async function () {
      const CCMMock = await hre.ethers.getContractFactory("CCMMock");
      let mock = await CCMMock.deploy();
      await expect(ccmp.connect(addr2).upgradeTo(mock.address)).to.be.reverted;
    });

    it("Should success if admin try to set implementation", async function () {
      const CCMMock = await hre.ethers.getContractFactory("CCMMock");
      let mock = await CCMMock.deploy();
      let mockccm = await CCMMock.attach(ccm.address);
      await ccmp.connect(deployer).upgradeTo(mock.address);
      expect(await mockccm.connect(addr2).iAmMock()).to.equal(true);
      await ccmp.connect(deployer).upgradeTo(ccmi.address);
      await expect( mockccm.connect(addr2).iAmMock()).to.be.reverted;
    });
    
    // changeAdmin
    it("Should fail if not admin try to change admin", async function () {
      await expect(ccmp.connect(addr2).changeAdmin(addr2.address)).to.be.reverted;
    });

    it("Should success if admin try to change admin", async function () {
      await ccmp.connect(deployer).changeAdmin(addr2.address);
      await expect(ccmp.connect(deployer).changeAdmin(deployer.address)).to.be.reverted;
      await ccmp.connect(addr2).changeAdmin(deployer.address);
    });

    // crossChain
    it("Should success when try to call crossChain from valid caller (child of factory) ", async function () {
      let args = "0x123456"
      let index = await eccd.getEthTxHashIndex();
      expect(await eccd.getEthTxHash(index)).to.equal(empty32);
      await expect(caller.lock(args)).to.not.reverted;
      expect(await eccd.getEthTxHash(index)).to.not.equal(empty32);
      expect(await eccd.getEthTxHashIndex()).to.equal(index+1);
    });
    
    it("Should fail when try to call crossChain from invalid caller (not child of factory) ", async function () {
      let args = "0x123456"
      await calleri.initialize(ccm.address);
      await expect(calleri.lock(args)).to.be.reverted;
    });
    
    // TODO
    // initGenesisBlock
    it("Should success when try to call initGenesisBlock at uninitialized CCM ", async function () {
      let rawHeader = "0xf90288a09aaafd568c490cb864a70c882692921aba8d0b0b4afee0d315dd271827181d44a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794ad3bf5ed640cc72f37bd21d64a65c3c756e9c88ca0409a47c2411320dd032bbc2473f674d0563d71275233300dba318dc9168f1265a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bb4166c0e808461695e05b890d883010a04846765746888676f312e31372e31856c696e757800000000000000f86ef86994258af48e28e4a6846e931ddff8e1cdf8579821e5946a708455c8777630aac9d1e7702d13f7a865b27c948c09d936a1b408d6e0afaa537ba4e06c4504a0ae94ad3bf5ed640cc72f37bd21d64a65c3c756e9c88c94c095448424a5ecd5ca7ccdadfaad127a9d7e88ec80c080a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000"
      let rawSeals = "0xf9010cb841796b399205f5a632a81f4de1f40a3eaba4a53274e6276923884eef1783eb72a50df4c01607138ec6b7e9ba8aef3b3b0ae8bfea3c60cc687758d8588411c8a91900b8413f2dfc48e3923547310acc2962987b2bd26e6ecfb03d03546c703f4739253d171e75fba04a8b09825ca1cc4f5e634d088d7e3a4aeff7f8295dfc83123574a19801b84106e5278161bba48ec000192b9b81715720b0f7925132f787c520f021a6d733cd39be5ceeab6fefe2c5ff85e2cad0248be863095039067ee094e1dec428ed30df01b841b88a58d15361f8d5020d6cb658a77eb02160855910228e6268928365b34832492de91c0040cb6e4f9a87a9792d140c4025b21353f640b76db077e7e41d637ed401"
      let accountProof = "0xb90292f901d1a03fcc929cd4de4523a85947f2901e7b2ebb40ed7e7b798ed4dbc38b1dc3bd0966a0ef1dcf53a29d51cd14fdc15753f8ac43ead21346da51c025cb37f4f62bbebf10a00955fb784f4a8d1e30f07fd7d682372f0d5978eb44236f2a3d907838da784591a0f26805664e0d3f255895f6df167a0d6cb556d0832550cab5e18ecef69fea658fa0c891ca4bcc13742bc9bdd9d7e248f1be80a59250a47549e2f4ad7d191a8c817aa0cb72678be243c86782166cbc930f482676b31ee7d4dd8f257d8fa5a5e78dfeb7a06100793bd06c3330f0b94d5c43db5d566c52fecb2ea6e5429d62483872b38db8a00d4acd3af141cfd38da59ed14f4dd4d6a1dc2e99d8b7d476265c6d2508e9fec2a03c25c9a779dc8ba29602e0d31fefccd0cdc2fe7cabe850e942c2e24b1ae04c52a0390310f48aaa4eb61cf64028096cebbce67fb5c8e977597645e5859237dfbce580a04bae44fb6eaa5adb4f2e43d5e984e3a496b58af2ead4cd98a5caf4aefb1e18eba062e4745a57b0201f3072f3638ccbe6c1d178a329d8f022ddf528ecaf0ee25aeba0564ecd4bf55660eed16eae45d18d7dcca864b56c5b189d551343b7075ff93a2780a0ca91e00d100dad27686303885a960221f8bd9e866205e79bdbdf39abf6b5bf4f80f85180808080a009eb35187e05f400b56b85f8a44a7ca5aa70463a494e1f23681977467d2015038080a0a5c67cad3d75ba041d439a056bd377f41419037f4cffd47cb5c1bfa6a65efa5b808080808080808080f869a020c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbffb846f8440180a0515139c9782416f9159f0b18bec9a5d6048a78a1a84679d488a38bf634c8e3aea0f4c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbff"
      let storageproof = "0xb9037ef90211a069a0a4b2fe0b85549530560441960454e5769bf2d5e1e8c01dfe9ee5436e0d98a0d43d638ef5109dde76bc6e71ec1dd51814e6e2f810d0dfa1c967156dfad05079a0b9f8db8696069430452ee61f45902818b0cbbb63f467f98712ab719a08a67dfea080e112ada318ccffdf7ae9a009ab65b84fef37ff932d20af5b8f36aef9ff19c3a0a4fe41d4d0c12c9a73a4fcb0d7cb6f42d34e82fdbad4decbb2110ed06b43ece4a039dadc311e9616480282fc28754957869640e6ae61b19f5f2148d76ac6f7ddffa005e54f9f3ec081657eaa2470cc998cac034ac780cc8e77a2638a613b5d3e09bfa0fa4fa2d4a5908f4eed095933ae60034e65db174d3d4ad0552fc12709cacc1df4a04a3d583558e5b9c6d797286c0386f184ace84dea20c11ad59c4732b9f15328f3a026b0f5075008df26169468bcb236edb0048290334a86c028945c37bbe3705d71a0c2badb590ef361bcf428ee12f96ae02c141242f5ecad6ce5ccf58815071fdca9a001fab3e0f1a51e29fbf6ab84d92d31f82670ce54575875dba913b03bb525fa20a0548e309319d0b254f884bbfc5625a31e80a4427207d119e1035b7f16ca88c8d7a04830c80e8905602d078205d5fb0dd2bf761aecb7ed1988b9be71b4a502de8750a04e3ce211f7f2abd2acc13dff998fa501d7a4e3b69a25d6588a4077f6b081b13ba0d844bef2b4bb91ec2cd98c5ad849590dc85e0fcb59d80b4267e16682f12320d280f8d18080a02f7aac5396222636a702cda40a0b95eea2c70cf3e51a7b10dcd15cd9b0eda8758080a05b3a8f5e031495df31cab7db35e132b74643055d219308e36f1f66087fcfc86da01290fdeddb8fa1aa934f9b61a61f9cc3381978ab678defec592d31202e8602c080a06e9caeb1ea7712bf8b1d1657055268cd465651b620bc5f98059a290581df0ad580a0c2722625ca5eab3ea0768784ccdd3debab8afaa11f066c9c4fda7a0dadebb9178080a043ac50f3a136cd5ec47b3ea76bd53d977e05beee4700b7b36d1dcdd1f04a8ea8808080f851a06888e61b6cab9668d3a8a99bc03120172c0667a4c66cc17b3e2bb3d649fabdad80a070e233427a2ac60c8f1201eab0950d45f838487e5e97e00aff925932ccb7331f8080808080808080808080808080f8429f3c85080fefffbb82108d261d75448b416bec14a557fef272694d383fa785c6a1a001142dfd1ebd53b619d9a3e4e188b753a219a638d74c5d8c23bcb9755c7927d1"
      let currentEpochInfo = "0xf901db02f901d4f901d1f85bb844307830326330376662376434386561633535396132343833653234396432373834316331386337636535646262626632373936613639363363633963656632376361626494258af48e28e4a6846e931ddff8e1cdf8579821e5f85bb8443078303266353133356165303835336166373166303137613865636236386537323062373239616239326337313233633638366537356237343837643461353761653037946a708455c8777630aac9d1e7702d13f7a865b27cf85bb8443078303365636163306562653732323463666430343035366339343036303561346139643463623033363763663538313962663765353530326266343466363862646434948c09d936a1b408d6e0afaa537ba4e06c4504a0aef85bb844307830336430656366643039646236623165346635396461376562646538663663336561336564303966303666353139303437376165346565353238656336393266613894ad3bf5ed640cc72f37bd21d64a65c3c756e9c88cf85bb844307830323434653530393130333434356435653866643239303630383330386431366430386337333936353564363939343235346534313362633161303637383338353694c095448424a5ecd5ca7ccdadfaad127a9d7e88ec82012c"
      
      expect(await eccd.getCurEpochId()).to.equal(0);
      await ccm.connect(addr1).initGenesisBlock(rawHeader, rawSeals, accountProof, storageproof, currentEpochInfo)
      expect(await eccd.getCurEpochId()).to.equal(2);
      let vals = await eccd.getCurEpochValidatorPkBytes();

    });
    
    // TODO
    it("Should fail when try to call initGenesisBlock at already initialized CCM ", async function () {
      let rawHeader = "0xf90288a09aaafd568c490cb864a70c882692921aba8d0b0b4afee0d315dd271827181d44a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794ad3bf5ed640cc72f37bd21d64a65c3c756e9c88ca0409a47c2411320dd032bbc2473f674d0563d71275233300dba318dc9168f1265a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bb4166c0e808461695e05b890d883010a04846765746888676f312e31372e31856c696e757800000000000000f86ef86994258af48e28e4a6846e931ddff8e1cdf8579821e5946a708455c8777630aac9d1e7702d13f7a865b27c948c09d936a1b408d6e0afaa537ba4e06c4504a0ae94ad3bf5ed640cc72f37bd21d64a65c3c756e9c88c94c095448424a5ecd5ca7ccdadfaad127a9d7e88ec80c080a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000"
      let rawSeals = "0xf9010cb841796b399205f5a632a81f4de1f40a3eaba4a53274e6276923884eef1783eb72a50df4c01607138ec6b7e9ba8aef3b3b0ae8bfea3c60cc687758d8588411c8a91900b8413f2dfc48e3923547310acc2962987b2bd26e6ecfb03d03546c703f4739253d171e75fba04a8b09825ca1cc4f5e634d088d7e3a4aeff7f8295dfc83123574a19801b84106e5278161bba48ec000192b9b81715720b0f7925132f787c520f021a6d733cd39be5ceeab6fefe2c5ff85e2cad0248be863095039067ee094e1dec428ed30df01b841b88a58d15361f8d5020d6cb658a77eb02160855910228e6268928365b34832492de91c0040cb6e4f9a87a9792d140c4025b21353f640b76db077e7e41d637ed401"
      let accountProof = "0xb90292f901d1a03fcc929cd4de4523a85947f2901e7b2ebb40ed7e7b798ed4dbc38b1dc3bd0966a0ef1dcf53a29d51cd14fdc15753f8ac43ead21346da51c025cb37f4f62bbebf10a00955fb784f4a8d1e30f07fd7d682372f0d5978eb44236f2a3d907838da784591a0f26805664e0d3f255895f6df167a0d6cb556d0832550cab5e18ecef69fea658fa0c891ca4bcc13742bc9bdd9d7e248f1be80a59250a47549e2f4ad7d191a8c817aa0cb72678be243c86782166cbc930f482676b31ee7d4dd8f257d8fa5a5e78dfeb7a06100793bd06c3330f0b94d5c43db5d566c52fecb2ea6e5429d62483872b38db8a00d4acd3af141cfd38da59ed14f4dd4d6a1dc2e99d8b7d476265c6d2508e9fec2a03c25c9a779dc8ba29602e0d31fefccd0cdc2fe7cabe850e942c2e24b1ae04c52a0390310f48aaa4eb61cf64028096cebbce67fb5c8e977597645e5859237dfbce580a04bae44fb6eaa5adb4f2e43d5e984e3a496b58af2ead4cd98a5caf4aefb1e18eba062e4745a57b0201f3072f3638ccbe6c1d178a329d8f022ddf528ecaf0ee25aeba0564ecd4bf55660eed16eae45d18d7dcca864b56c5b189d551343b7075ff93a2780a0ca91e00d100dad27686303885a960221f8bd9e866205e79bdbdf39abf6b5bf4f80f85180808080a009eb35187e05f400b56b85f8a44a7ca5aa70463a494e1f23681977467d2015038080a0a5c67cad3d75ba041d439a056bd377f41419037f4cffd47cb5c1bfa6a65efa5b808080808080808080f869a020c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbffb846f8440180a0515139c9782416f9159f0b18bec9a5d6048a78a1a84679d488a38bf634c8e3aea0f4c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbff"
      let storageproof = "0xb9037ef90211a069a0a4b2fe0b85549530560441960454e5769bf2d5e1e8c01dfe9ee5436e0d98a0d43d638ef5109dde76bc6e71ec1dd51814e6e2f810d0dfa1c967156dfad05079a0b9f8db8696069430452ee61f45902818b0cbbb63f467f98712ab719a08a67dfea080e112ada318ccffdf7ae9a009ab65b84fef37ff932d20af5b8f36aef9ff19c3a0a4fe41d4d0c12c9a73a4fcb0d7cb6f42d34e82fdbad4decbb2110ed06b43ece4a039dadc311e9616480282fc28754957869640e6ae61b19f5f2148d76ac6f7ddffa005e54f9f3ec081657eaa2470cc998cac034ac780cc8e77a2638a613b5d3e09bfa0fa4fa2d4a5908f4eed095933ae60034e65db174d3d4ad0552fc12709cacc1df4a04a3d583558e5b9c6d797286c0386f184ace84dea20c11ad59c4732b9f15328f3a026b0f5075008df26169468bcb236edb0048290334a86c028945c37bbe3705d71a0c2badb590ef361bcf428ee12f96ae02c141242f5ecad6ce5ccf58815071fdca9a001fab3e0f1a51e29fbf6ab84d92d31f82670ce54575875dba913b03bb525fa20a0548e309319d0b254f884bbfc5625a31e80a4427207d119e1035b7f16ca88c8d7a04830c80e8905602d078205d5fb0dd2bf761aecb7ed1988b9be71b4a502de8750a04e3ce211f7f2abd2acc13dff998fa501d7a4e3b69a25d6588a4077f6b081b13ba0d844bef2b4bb91ec2cd98c5ad849590dc85e0fcb59d80b4267e16682f12320d280f8d18080a02f7aac5396222636a702cda40a0b95eea2c70cf3e51a7b10dcd15cd9b0eda8758080a05b3a8f5e031495df31cab7db35e132b74643055d219308e36f1f66087fcfc86da01290fdeddb8fa1aa934f9b61a61f9cc3381978ab678defec592d31202e8602c080a06e9caeb1ea7712bf8b1d1657055268cd465651b620bc5f98059a290581df0ad580a0c2722625ca5eab3ea0768784ccdd3debab8afaa11f066c9c4fda7a0dadebb9178080a043ac50f3a136cd5ec47b3ea76bd53d977e05beee4700b7b36d1dcdd1f04a8ea8808080f851a06888e61b6cab9668d3a8a99bc03120172c0667a4c66cc17b3e2bb3d649fabdad80a070e233427a2ac60c8f1201eab0950d45f838487e5e97e00aff925932ccb7331f8080808080808080808080808080f8429f3c85080fefffbb82108d261d75448b416bec14a557fef272694d383fa785c6a1a001142dfd1ebd53b619d9a3e4e188b753a219a638d74c5d8c23bcb9755c7927d1"
      let currentEpochInfo = "0xf901db02f901d4f901d1f85bb844307830326330376662376434386561633535396132343833653234396432373834316331386337636535646262626632373936613639363363633963656632376361626494258af48e28e4a6846e931ddff8e1cdf8579821e5f85bb8443078303266353133356165303835336166373166303137613865636236386537323062373239616239326337313233633638366537356237343837643461353761653037946a708455c8777630aac9d1e7702d13f7a865b27cf85bb8443078303365636163306562653732323463666430343035366339343036303561346139643463623033363763663538313962663765353530326266343466363862646434948c09d936a1b408d6e0afaa537ba4e06c4504a0aef85bb844307830336430656366643039646236623165346635396461376562646538663663336561336564303966303666353139303437376165346565353238656336393266613894ad3bf5ed640cc72f37bd21d64a65c3c756e9c88cf85bb844307830323434653530393130333434356435653866643239303630383330386431366430386337333936353564363939343235346534313362633161303637383338353694c095448424a5ecd5ca7ccdadfaad127a9d7e88ec82012c"
      
      expect(await eccd.getCurEpochId()).to.equal(2);
      await expect(ccm.connect(addr1).initGenesisBlock(rawHeader, rawSeals, accountProof, storageproof, currentEpochInfo)).to.be.reverted;
    });

    // TODO
    // changeEpoch
    it("Should fail when try to call changeEpoch with incorrect header ", async function () {
      // invalid header 
      let _invalidHeader = "0x"
      let rawSeals = "0xf9010cb841b0e9aaec13e2fa8e7f3a24194f1efd533478d1a16673d64409340878bc882bcb5d89111cf0669085d0938ffe06ae67a45a2c1e5a6d7d3b93ea5551433812641a01b8419dc0b38ab186feec929cd1bcf8215353edaa73294569b3f718d1ba849e4b47252f69d48bfe1eefb0690cad8289747d4556bba3e952614836d5f8084527290e7600b8419a9f172e46b1234465b96bdfb0a2cf971662ad3f94911ba9082013f78262e6fc04c08c8d3b99f42bdc5d5e0fb7c8b67e5807bf168e64bcbb240b8f1584a74fd601b841867de707c4cc0dbd733a96259652480279c016019070a53887fe004b9c2b0d923f1d5ecbcb556a03d7a153cfac95448955af80b27321d7869f9ad18fd2b7747e00"
      let accountProof = "0xb90292f901d1a03fcc929cd4de4523a85947f2901e7b2ebb40ed7e7b798ed4dbc38b1dc3bd0966a0ef1dcf53a29d51cd14fdc15753f8ac43ead21346da51c025cb37f4f62bbebf10a00955fb784f4a8d1e30f07fd7d682372f0d5978eb44236f2a3d907838da784591a0f26805664e0d3f255895f6df167a0d6cb556d0832550cab5e18ecef69fea658fa0c891ca4bcc13742bc9bdd9d7e248f1be80a59250a47549e2f4ad7d191a8c817aa0cb72678be243c86782166cbc930f482676b31ee7d4dd8f257d8fa5a5e78dfeb7a06100793bd06c3330f0b94d5c43db5d566c52fecb2ea6e5429d62483872b38db8a00d4acd3af141cfd38da59ed14f4dd4d6a1dc2e99d8b7d476265c6d2508e9fec2a03c25c9a779dc8ba29602e0d31fefccd0cdc2fe7cabe850e942c2e24b1ae04c52a0390310f48aaa4eb61cf64028096cebbce67fb5c8e977597645e5859237dfbce580a04bae44fb6eaa5adb4f2e43d5e984e3a496b58af2ead4cd98a5caf4aefb1e18eba062e4745a57b0201f3072f3638ccbe6c1d178a329d8f022ddf528ecaf0ee25aeba0564ecd4bf55660eed16eae45d18d7dcca864b56c5b189d551343b7075ff93a2780a0ca91e00d100dad27686303885a960221f8bd9e866205e79bdbdf39abf6b5bf4f80f85180808080a009eb35187e05f400b56b85f8a44a7ca5aa70463a494e1f23681977467d2015038080a0a5c67cad3d75ba041d439a056bd377f41419037f4cffd47cb5c1bfa6a65efa5b808080808080808080f869a020c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbffb846f8440180a0515139c9782416f9159f0b18bec9a5d6048a78a1a84679d488a38bf634c8e3aea0f4c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbff"
      let storageproof = "0xb9034cf90211a069a0a4b2fe0b85549530560441960454e5769bf2d5e1e8c01dfe9ee5436e0d98a0d43d638ef5109dde76bc6e71ec1dd51814e6e2f810d0dfa1c967156dfad05079a0b9f8db8696069430452ee61f45902818b0cbbb63f467f98712ab719a08a67dfea080e112ada318ccffdf7ae9a009ab65b84fef37ff932d20af5b8f36aef9ff19c3a0a4fe41d4d0c12c9a73a4fcb0d7cb6f42d34e82fdbad4decbb2110ed06b43ece4a039dadc311e9616480282fc28754957869640e6ae61b19f5f2148d76ac6f7ddffa005e54f9f3ec081657eaa2470cc998cac034ac780cc8e77a2638a613b5d3e09bfa0fa4fa2d4a5908f4eed095933ae60034e65db174d3d4ad0552fc12709cacc1df4a04a3d583558e5b9c6d797286c0386f184ace84dea20c11ad59c4732b9f15328f3a026b0f5075008df26169468bcb236edb0048290334a86c028945c37bbe3705d71a0c2badb590ef361bcf428ee12f96ae02c141242f5ecad6ce5ccf58815071fdca9a001fab3e0f1a51e29fbf6ab84d92d31f82670ce54575875dba913b03bb525fa20a0548e309319d0b254f884bbfc5625a31e80a4427207d119e1035b7f16ca88c8d7a04830c80e8905602d078205d5fb0dd2bf761aecb7ed1988b9be71b4a502de8750a04e3ce211f7f2abd2acc13dff998fa501d7a4e3b69a25d6588a4077f6b081b13ba0d844bef2b4bb91ec2cd98c5ad849590dc85e0fcb59d80b4267e16682f12320d280f8f1a0405965c5cc1d613b1556e3c56fb96458f7529e996a6f98eae5b233aab575cba480a040cd7da4d779b8975af82ce0c16ee3b70e5536d212f1477951841290b941805980a077e58893644715d3c57adb8c95030acdd2a5a4ccbb89d3f2aa5ae5c40ab512dc8080a0b79880a0fd018c5344dffc1e7ea50d87bb17825c744c3d8c2f4879cabd6cb350a087945e6534c4676163320f08be4fc735d25c6e5df34631fb4ae44cc48b121caba0883727dc1869417c6408a72e8a9aa2d7f782f76249a95e18525c7ae80fc8671880808080a077a95f5c622b1a6b34a2325907911078b4c982c94c6a5c9a225ee3fb0534be2d8080f843a02011996e9d8a6127e10f3f192c3eb9cb572a1a05dd7159eaaf1e509797580b0fa1a001bb273799e71193ba92394140a7d4c9cc6f038887082d089de5530ad9a29ea0"
      let nextEpochInfo = "0xf9029503f9028ef9028bf85bb844307830326330376662376434386561633535396132343833653234396432373834316331386337636535646262626632373936613639363363633963656632376361626494258af48e28e4a6846e931ddff8e1cdf8579821e5f85bb8443078303266353133356165303835336166373166303137613865636236386537323062373239616239326337313233633638366537356237343837643461353761653037946a708455c8777630aac9d1e7702d13f7a865b27cf85bb8443078303365636163306562653732323463666430343035366339343036303561346139643463623033363763663538313962663765353530326266343466363862646434948c09d936a1b408d6e0afaa537ba4e06c4504a0aef85bb844307830336430656366643039646236623165346635396461376562646538663663336561336564303966303666353139303437376165346565353238656336393266613894ad3bf5ed640cc72f37bd21d64a65c3c756e9c88cf85bb844307830323434653530393130333434356435653866643239303630383330386431366430386337333936353564363939343235346534313362633161303637383338353694c095448424a5ecd5ca7ccdadfaad127a9d7e88ecf85bb844307830323338383464653239313438353035613864383632393932653537323137363764346234376666353266666162346332643235323731383264383132613664393594d47a4e56e9262543db39d9203cf1a2e53735f834f85bb844307830336238333866613233383762656233613536616564383665343437333039663838343463623230383338376336336166363461643734303732396235633061323794bfb558f0dceb07fbb09e1c283048b551a43109218201f4"
      
      expect(await eccd.getCurEpochId()).to.equal(2);
      await expect(ccm.connect(addr1).changeEpoch(_invalidHeader, rawSeals, accountProof, storageproof, nextEpochInfo)).to.be.reverted;
    });
    
    // TODO
    it("Should fail when try to call changeEpoch with incorrect seals ", async function () {
      let rawHeader = "0xf90288a0a23bf3b70c42c0e0a63703a6dc3499e1214d2af3bb3c6a48b3204fdb208be44aa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347948c09d936a1b408d6e0afaa537ba4e06c4504a0aea0409a47c2411320dd032bbc2473f674d0563d71275233300dba318dc9168f1265a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421b9010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018201f3849d37de6b808461695e9ab890d883010a04846765746888676f312e31372e31856c696e757800000000000000f86ef86994258af48e28e4a6846e931ddff8e1cdf8579821e5946a708455c8777630aac9d1e7702d13f7a865b27c948c09d936a1b408d6e0afaa537ba4e06c4504a0ae94ad3bf5ed640cc72f37bd21d64a65c3c756e9c88c94c095448424a5ecd5ca7ccdadfaad127a9d7e88ec80c080a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000"
      // invalid seals (which should from current epoch validators) from next epoch validators 
      let _invalidSeals = "0xf9014fb841017109bf1d901853c28308d7565aeeef143fae070d36700257af30cd4730528c1e4233554f6c35d008069b21a98a3eb58a2c375c2c0f03c58e2e4878d270726801b8418378937fb262559217c22a9b58b292eb913f017c29a4ff2201e69ba5c4d53ccc40bba4705f427521146e51dbc2d60cdc7aba129c15b79e94b9d11fd41874413100b84188bf7375d0b884e65de33c6b1d6e87fbd1b5010df5dbd93a47a3d1fa435e41df10aac4fbf091b798509252c9058011852a8ef78f0bed2879b9bd4ba87b4c509800b841a0811f10073b27a0683532ba65e4bcbdc60be479de9b542951ca36f3615dc3cd05dc60413ad27dcf2eee1ad83932a82b2b0a97a971c9c15e31455fb402fc597101b841d6d838080755e680a4e35e0a389f7d23703604ed528a572b297c0d04d169562b00f828f0a0589822e2a2e3cbf2c329931da4b14fce03ac4007087f221e37689400"
      let accountProof = "0xb90292f901d1a03fcc929cd4de4523a85947f2901e7b2ebb40ed7e7b798ed4dbc38b1dc3bd0966a0ef1dcf53a29d51cd14fdc15753f8ac43ead21346da51c025cb37f4f62bbebf10a00955fb784f4a8d1e30f07fd7d682372f0d5978eb44236f2a3d907838da784591a0f26805664e0d3f255895f6df167a0d6cb556d0832550cab5e18ecef69fea658fa0c891ca4bcc13742bc9bdd9d7e248f1be80a59250a47549e2f4ad7d191a8c817aa0cb72678be243c86782166cbc930f482676b31ee7d4dd8f257d8fa5a5e78dfeb7a06100793bd06c3330f0b94d5c43db5d566c52fecb2ea6e5429d62483872b38db8a00d4acd3af141cfd38da59ed14f4dd4d6a1dc2e99d8b7d476265c6d2508e9fec2a03c25c9a779dc8ba29602e0d31fefccd0cdc2fe7cabe850e942c2e24b1ae04c52a0390310f48aaa4eb61cf64028096cebbce67fb5c8e977597645e5859237dfbce580a04bae44fb6eaa5adb4f2e43d5e984e3a496b58af2ead4cd98a5caf4aefb1e18eba062e4745a57b0201f3072f3638ccbe6c1d178a329d8f022ddf528ecaf0ee25aeba0564ecd4bf55660eed16eae45d18d7dcca864b56c5b189d551343b7075ff93a2780a0ca91e00d100dad27686303885a960221f8bd9e866205e79bdbdf39abf6b5bf4f80f85180808080a009eb35187e05f400b56b85f8a44a7ca5aa70463a494e1f23681977467d2015038080a0a5c67cad3d75ba041d439a056bd377f41419037f4cffd47cb5c1bfa6a65efa5b808080808080808080f869a020c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbffb846f8440180a0515139c9782416f9159f0b18bec9a5d6048a78a1a84679d488a38bf634c8e3aea0f4c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbff"
      let storageproof = "0xb9034cf90211a069a0a4b2fe0b85549530560441960454e5769bf2d5e1e8c01dfe9ee5436e0d98a0d43d638ef5109dde76bc6e71ec1dd51814e6e2f810d0dfa1c967156dfad05079a0b9f8db8696069430452ee61f45902818b0cbbb63f467f98712ab719a08a67dfea080e112ada318ccffdf7ae9a009ab65b84fef37ff932d20af5b8f36aef9ff19c3a0a4fe41d4d0c12c9a73a4fcb0d7cb6f42d34e82fdbad4decbb2110ed06b43ece4a039dadc311e9616480282fc28754957869640e6ae61b19f5f2148d76ac6f7ddffa005e54f9f3ec081657eaa2470cc998cac034ac780cc8e77a2638a613b5d3e09bfa0fa4fa2d4a5908f4eed095933ae60034e65db174d3d4ad0552fc12709cacc1df4a04a3d583558e5b9c6d797286c0386f184ace84dea20c11ad59c4732b9f15328f3a026b0f5075008df26169468bcb236edb0048290334a86c028945c37bbe3705d71a0c2badb590ef361bcf428ee12f96ae02c141242f5ecad6ce5ccf58815071fdca9a001fab3e0f1a51e29fbf6ab84d92d31f82670ce54575875dba913b03bb525fa20a0548e309319d0b254f884bbfc5625a31e80a4427207d119e1035b7f16ca88c8d7a04830c80e8905602d078205d5fb0dd2bf761aecb7ed1988b9be71b4a502de8750a04e3ce211f7f2abd2acc13dff998fa501d7a4e3b69a25d6588a4077f6b081b13ba0d844bef2b4bb91ec2cd98c5ad849590dc85e0fcb59d80b4267e16682f12320d280f8f1a0405965c5cc1d613b1556e3c56fb96458f7529e996a6f98eae5b233aab575cba480a040cd7da4d779b8975af82ce0c16ee3b70e5536d212f1477951841290b941805980a077e58893644715d3c57adb8c95030acdd2a5a4ccbb89d3f2aa5ae5c40ab512dc8080a0b79880a0fd018c5344dffc1e7ea50d87bb17825c744c3d8c2f4879cabd6cb350a087945e6534c4676163320f08be4fc735d25c6e5df34631fb4ae44cc48b121caba0883727dc1869417c6408a72e8a9aa2d7f782f76249a95e18525c7ae80fc8671880808080a077a95f5c622b1a6b34a2325907911078b4c982c94c6a5c9a225ee3fb0534be2d8080f843a02011996e9d8a6127e10f3f192c3eb9cb572a1a05dd7159eaaf1e509797580b0fa1a001bb273799e71193ba92394140a7d4c9cc6f038887082d089de5530ad9a29ea0"
      let nextEpochInfo = "0xf9029503f9028ef9028bf85bb844307830326330376662376434386561633535396132343833653234396432373834316331386337636535646262626632373936613639363363633963656632376361626494258af48e28e4a6846e931ddff8e1cdf8579821e5f85bb8443078303266353133356165303835336166373166303137613865636236386537323062373239616239326337313233633638366537356237343837643461353761653037946a708455c8777630aac9d1e7702d13f7a865b27cf85bb8443078303365636163306562653732323463666430343035366339343036303561346139643463623033363763663538313962663765353530326266343466363862646434948c09d936a1b408d6e0afaa537ba4e06c4504a0aef85bb844307830336430656366643039646236623165346635396461376562646538663663336561336564303966303666353139303437376165346565353238656336393266613894ad3bf5ed640cc72f37bd21d64a65c3c756e9c88cf85bb844307830323434653530393130333434356435653866643239303630383330386431366430386337333936353564363939343235346534313362633161303637383338353694c095448424a5ecd5ca7ccdadfaad127a9d7e88ecf85bb844307830323338383464653239313438353035613864383632393932653537323137363764346234376666353266666162346332643235323731383264383132613664393594d47a4e56e9262543db39d9203cf1a2e53735f834f85bb844307830336238333866613233383762656233613536616564383665343437333039663838343463623230383338376336336166363461643734303732396235633061323794bfb558f0dceb07fbb09e1c283048b551a43109218201f4"
      
      expect(await eccd.getCurEpochId()).to.equal(2);
      await expect(ccm.connect(addr1).changeEpoch(rawHeader, _invalidSeals, accountProof, storageproof, nextEpochInfo)).to.be.revertedWith("Verify header failed");
    });
    
    // TODO
    it("Should fail when try to call changeEpoch with incorrect proof ", async function () {
      let rawHeader = "0xf90288a0a23bf3b70c42c0e0a63703a6dc3499e1214d2af3bb3c6a48b3204fdb208be44aa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347948c09d936a1b408d6e0afaa537ba4e06c4504a0aea0409a47c2411320dd032bbc2473f674d0563d71275233300dba318dc9168f1265a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bf3849d37de6b808461695e9ab890d883010a04846765746888676f312e31372e31856c696e757800000000000000f86ef86994258af48e28e4a6846e931ddff8e1cdf8579821e5946a708455c8777630aac9d1e7702d13f7a865b27c948c09d936a1b408d6e0afaa537ba4e06c4504a0ae94ad3bf5ed640cc72f37bd21d64a65c3c756e9c88c94c095448424a5ecd5ca7ccdadfaad127a9d7e88ec80c080a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000"
      let rawSeals = "0xf9010cb841b0e9aaec13e2fa8e7f3a24194f1efd533478d1a16673d64409340878bc882bcb5d89111cf0669085d0938ffe06ae67a45a2c1e5a6d7d3b93ea5551433812641a01b8419dc0b38ab186feec929cd1bcf8215353edaa73294569b3f718d1ba849e4b47252f69d48bfe1eefb0690cad8289747d4556bba3e952614836d5f8084527290e7600b8419a9f172e46b1234465b96bdfb0a2cf971662ad3f94911ba9082013f78262e6fc04c08c8d3b99f42bdc5d5e0fb7c8b67e5807bf168e64bcbb240b8f1584a74fd601b841867de707c4cc0dbd733a96259652480279c016019070a53887fe004b9c2b0d923f1d5ecbcb556a03d7a153cfac95448955af80b27321d7869f9ad18fd2b7747e00"
      // invalid proof of epochId_2 slot (should be epochId_3 slot)
      let accountProof = "0xb90292f901d1a03fcc929cd4de4523a85947f2901e7b2ebb40ed7e7b798ed4dbc38b1dc3bd0966a0ef1dcf53a29d51cd14fdc15753f8ac43ead21346da51c025cb37f4f62bbebf10a00955fb784f4a8d1e30f07fd7d682372f0d5978eb44236f2a3d907838da784591a0f26805664e0d3f255895f6df167a0d6cb556d0832550cab5e18ecef69fea658fa0c891ca4bcc13742bc9bdd9d7e248f1be80a59250a47549e2f4ad7d191a8c817aa0cb72678be243c86782166cbc930f482676b31ee7d4dd8f257d8fa5a5e78dfeb7a06100793bd06c3330f0b94d5c43db5d566c52fecb2ea6e5429d62483872b38db8a00d4acd3af141cfd38da59ed14f4dd4d6a1dc2e99d8b7d476265c6d2508e9fec2a03c25c9a779dc8ba29602e0d31fefccd0cdc2fe7cabe850e942c2e24b1ae04c52a0390310f48aaa4eb61cf64028096cebbce67fb5c8e977597645e5859237dfbce580a04bae44fb6eaa5adb4f2e43d5e984e3a496b58af2ead4cd98a5caf4aefb1e18eba062e4745a57b0201f3072f3638ccbe6c1d178a329d8f022ddf528ecaf0ee25aeba0564ecd4bf55660eed16eae45d18d7dcca864b56c5b189d551343b7075ff93a2780a0ca91e00d100dad27686303885a960221f8bd9e866205e79bdbdf39abf6b5bf4f80f85180808080a009eb35187e05f400b56b85f8a44a7ca5aa70463a494e1f23681977467d2015038080a0a5c67cad3d75ba041d439a056bd377f41419037f4cffd47cb5c1bfa6a65efa5b808080808080808080f869a020c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbffb846f8440180a0515139c9782416f9159f0b18bec9a5d6048a78a1a84679d488a38bf634c8e3aea0f4c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbff"
      let _invalidStorageproof = "0xb9037ef90211a069a0a4b2fe0b85549530560441960454e5769bf2d5e1e8c01dfe9ee5436e0d98a0d43d638ef5109dde76bc6e71ec1dd51814e6e2f810d0dfa1c967156dfad05079a0b9f8db8696069430452ee61f45902818b0cbbb63f467f98712ab719a08a67dfea080e112ada318ccffdf7ae9a009ab65b84fef37ff932d20af5b8f36aef9ff19c3a0a4fe41d4d0c12c9a73a4fcb0d7cb6f42d34e82fdbad4decbb2110ed06b43ece4a039dadc311e9616480282fc28754957869640e6ae61b19f5f2148d76ac6f7ddffa005e54f9f3ec081657eaa2470cc998cac034ac780cc8e77a2638a613b5d3e09bfa0fa4fa2d4a5908f4eed095933ae60034e65db174d3d4ad0552fc12709cacc1df4a04a3d583558e5b9c6d797286c0386f184ace84dea20c11ad59c4732b9f15328f3a026b0f5075008df26169468bcb236edb0048290334a86c028945c37bbe3705d71a0c2badb590ef361bcf428ee12f96ae02c141242f5ecad6ce5ccf58815071fdca9a001fab3e0f1a51e29fbf6ab84d92d31f82670ce54575875dba913b03bb525fa20a0548e309319d0b254f884bbfc5625a31e80a4427207d119e1035b7f16ca88c8d7a04830c80e8905602d078205d5fb0dd2bf761aecb7ed1988b9be71b4a502de8750a04e3ce211f7f2abd2acc13dff998fa501d7a4e3b69a25d6588a4077f6b081b13ba0d844bef2b4bb91ec2cd98c5ad849590dc85e0fcb59d80b4267e16682f12320d280f8d18080a02f7aac5396222636a702cda40a0b95eea2c70cf3e51a7b10dcd15cd9b0eda8758080a05b3a8f5e031495df31cab7db35e132b74643055d219308e36f1f66087fcfc86da01290fdeddb8fa1aa934f9b61a61f9cc3381978ab678defec592d31202e8602c080a06e9caeb1ea7712bf8b1d1657055268cd465651b620bc5f98059a290581df0ad580a0c2722625ca5eab3ea0768784ccdd3debab8afaa11f066c9c4fda7a0dadebb9178080a043ac50f3a136cd5ec47b3ea76bd53d977e05beee4700b7b36d1dcdd1f04a8ea8808080f851a06888e61b6cab9668d3a8a99bc03120172c0667a4c66cc17b3e2bb3d649fabdad80a070e233427a2ac60c8f1201eab0950d45f838487e5e97e00aff925932ccb7331f8080808080808080808080808080f8429f3c85080fefffbb82108d261d75448b416bec14a557fef272694d383fa785c6a1a001142dfd1ebd53b619d9a3e4e188b753a219a638d74c5d8c23bcb9755c7927d1"
      let nextEpochInfo = "0xf9029503f9028ef9028bf85bb844307830326330376662376434386561633535396132343833653234396432373834316331386337636535646262626632373936613639363363633963656632376361626494258af48e28e4a6846e931ddff8e1cdf8579821e5f85bb8443078303266353133356165303835336166373166303137613865636236386537323062373239616239326337313233633638366537356237343837643461353761653037946a708455c8777630aac9d1e7702d13f7a865b27cf85bb8443078303365636163306562653732323463666430343035366339343036303561346139643463623033363763663538313962663765353530326266343466363862646434948c09d936a1b408d6e0afaa537ba4e06c4504a0aef85bb844307830336430656366643039646236623165346635396461376562646538663663336561336564303966303666353139303437376165346565353238656336393266613894ad3bf5ed640cc72f37bd21d64a65c3c756e9c88cf85bb844307830323434653530393130333434356435653866643239303630383330386431366430386337333936353564363939343235346534313362633161303637383338353694c095448424a5ecd5ca7ccdadfaad127a9d7e88ecf85bb844307830323338383464653239313438353035613864383632393932653537323137363764346234376666353266666162346332643235323731383264383132613664393594d47a4e56e9262543db39d9203cf1a2e53735f834f85bb844307830336238333866613233383762656233613536616564383665343437333039663838343463623230383338376336336166363461643734303732396235633061323794bfb558f0dceb07fbb09e1c283048b551a43109218201f4"
      
      expect(await eccd.getCurEpochId()).to.equal(2);
      await expect(ccm.connect(addr1).changeEpoch(rawHeader, rawSeals, accountProof, _invalidStorageproof, nextEpochInfo)).to.be.reverted;
    });
    
    // TODO
    it("Should fail when try to call changeEpoch with incorrect epochInfo ", async function () {
      let rawHeader = "0xf90288a0a23bf3b70c42c0e0a63703a6dc3499e1214d2af3bb3c6a48b3204fdb208be44aa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347948c09d936a1b408d6e0afaa537ba4e06c4504a0aea0409a47c2411320dd032bbc2473f674d0563d71275233300dba318dc9168f1265a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bf3849d37de6b808461695e9ab890d883010a04846765746888676f312e31372e31856c696e757800000000000000f86ef86994258af48e28e4a6846e931ddff8e1cdf8579821e5946a708455c8777630aac9d1e7702d13f7a865b27c948c09d936a1b408d6e0afaa537ba4e06c4504a0ae94ad3bf5ed640cc72f37bd21d64a65c3c756e9c88c94c095448424a5ecd5ca7ccdadfaad127a9d7e88ec80c080a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000"
      let rawSeals = "0xf9010cb841b0e9aaec13e2fa8e7f3a24194f1efd533478d1a16673d64409340878bc882bcb5d89111cf0669085d0938ffe06ae67a45a2c1e5a6d7d3b93ea5551433812641a01b8419dc0b38ab186feec929cd1bcf8215353edaa73294569b3f718d1ba849e4b47252f69d48bfe1eefb0690cad8289747d4556bba3e952614836d5f8084527290e7600b8419a9f172e46b1234465b96bdfb0a2cf971662ad3f94911ba9082013f78262e6fc04c08c8d3b99f42bdc5d5e0fb7c8b67e5807bf168e64bcbb240b8f1584a74fd601b841867de707c4cc0dbd733a96259652480279c016019070a53887fe004b9c2b0d923f1d5ecbcb556a03d7a153cfac95448955af80b27321d7869f9ad18fd2b7747e00"
      let accountProof = "0xb90292f901d1a03fcc929cd4de4523a85947f2901e7b2ebb40ed7e7b798ed4dbc38b1dc3bd0966a0ef1dcf53a29d51cd14fdc15753f8ac43ead21346da51c025cb37f4f62bbebf10a00955fb784f4a8d1e30f07fd7d682372f0d5978eb44236f2a3d907838da784591a0f26805664e0d3f255895f6df167a0d6cb556d0832550cab5e18ecef69fea658fa0c891ca4bcc13742bc9bdd9d7e248f1be80a59250a47549e2f4ad7d191a8c817aa0cb72678be243c86782166cbc930f482676b31ee7d4dd8f257d8fa5a5e78dfeb7a06100793bd06c3330f0b94d5c43db5d566c52fecb2ea6e5429d62483872b38db8a00d4acd3af141cfd38da59ed14f4dd4d6a1dc2e99d8b7d476265c6d2508e9fec2a03c25c9a779dc8ba29602e0d31fefccd0cdc2fe7cabe850e942c2e24b1ae04c52a0390310f48aaa4eb61cf64028096cebbce67fb5c8e977597645e5859237dfbce580a04bae44fb6eaa5adb4f2e43d5e984e3a496b58af2ead4cd98a5caf4aefb1e18eba062e4745a57b0201f3072f3638ccbe6c1d178a329d8f022ddf528ecaf0ee25aeba0564ecd4bf55660eed16eae45d18d7dcca864b56c5b189d551343b7075ff93a2780a0ca91e00d100dad27686303885a960221f8bd9e866205e79bdbdf39abf6b5bf4f80f85180808080a009eb35187e05f400b56b85f8a44a7ca5aa70463a494e1f23681977467d2015038080a0a5c67cad3d75ba041d439a056bd377f41419037f4cffd47cb5c1bfa6a65efa5b808080808080808080f869a020c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbffb846f8440180a0515139c9782416f9159f0b18bec9a5d6048a78a1a84679d488a38bf634c8e3aea0f4c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbff"
      let storageproof = "0xb9034cf90211a069a0a4b2fe0b85549530560441960454e5769bf2d5e1e8c01dfe9ee5436e0d98a0d43d638ef5109dde76bc6e71ec1dd51814e6e2f810d0dfa1c967156dfad05079a0b9f8db8696069430452ee61f45902818b0cbbb63f467f98712ab719a08a67dfea080e112ada318ccffdf7ae9a009ab65b84fef37ff932d20af5b8f36aef9ff19c3a0a4fe41d4d0c12c9a73a4fcb0d7cb6f42d34e82fdbad4decbb2110ed06b43ece4a039dadc311e9616480282fc28754957869640e6ae61b19f5f2148d76ac6f7ddffa005e54f9f3ec081657eaa2470cc998cac034ac780cc8e77a2638a613b5d3e09bfa0fa4fa2d4a5908f4eed095933ae60034e65db174d3d4ad0552fc12709cacc1df4a04a3d583558e5b9c6d797286c0386f184ace84dea20c11ad59c4732b9f15328f3a026b0f5075008df26169468bcb236edb0048290334a86c028945c37bbe3705d71a0c2badb590ef361bcf428ee12f96ae02c141242f5ecad6ce5ccf58815071fdca9a001fab3e0f1a51e29fbf6ab84d92d31f82670ce54575875dba913b03bb525fa20a0548e309319d0b254f884bbfc5625a31e80a4427207d119e1035b7f16ca88c8d7a04830c80e8905602d078205d5fb0dd2bf761aecb7ed1988b9be71b4a502de8750a04e3ce211f7f2abd2acc13dff998fa501d7a4e3b69a25d6588a4077f6b081b13ba0d844bef2b4bb91ec2cd98c5ad849590dc85e0fcb59d80b4267e16682f12320d280f8f1a0405965c5cc1d613b1556e3c56fb96458f7529e996a6f98eae5b233aab575cba480a040cd7da4d779b8975af82ce0c16ee3b70e5536d212f1477951841290b941805980a077e58893644715d3c57adb8c95030acdd2a5a4ccbb89d3f2aa5ae5c40ab512dc8080a0b79880a0fd018c5344dffc1e7ea50d87bb17825c744c3d8c2f4879cabd6cb350a087945e6534c4676163320f08be4fc735d25c6e5df34631fb4ae44cc48b121caba0883727dc1869417c6408a72e8a9aa2d7f782f76249a95e18525c7ae80fc8671880808080a077a95f5c622b1a6b34a2325907911078b4c982c94c6a5c9a225ee3fb0534be2d8080f843a02011996e9d8a6127e10f3f192c3eb9cb572a1a05dd7159eaaf1e509797580b0fa1a001bb273799e71193ba92394140a7d4c9cc6f038887082d089de5530ad9a29ea0"
      // invalid epochInfo of epoch_2 (should be epoch_3)
      let _invalidNextEpochInfo = "0xf901db02f901d4f901d1f85bb844307830326330376662376434386561633535396132343833653234396432373834316331386337636535646262626632373936613639363363633963656632376361626494258af48e28e4a6846e931ddff8e1cdf8579821e5f85bb8443078303266353133356165303835336166373166303137613865636236386537323062373239616239326337313233633638366537356237343837643461353761653037946a708455c8777630aac9d1e7702d13f7a865b27cf85bb8443078303365636163306562653732323463666430343035366339343036303561346139643463623033363763663538313962663765353530326266343466363862646434948c09d936a1b408d6e0afaa537ba4e06c4504a0aef85bb844307830336430656366643039646236623165346635396461376562646538663663336561336564303966303666353139303437376165346565353238656336393266613894ad3bf5ed640cc72f37bd21d64a65c3c756e9c88cf85bb844307830323434653530393130333434356435653866643239303630383330386431366430386337333936353564363939343235346534313362633161303637383338353694c095448424a5ecd5ca7ccdadfaad127a9d7e88ec82012c"
      
      expect(await eccd.getCurEpochId()).to.equal(2);
      await expect(ccm.connect(addr1).changeEpoch(rawHeader, rawSeals, accountProof, storageproof, _invalidNextEpochInfo)).to.be.reverted;
    });
    
    // TODO
    it("Should fail when try to call changeEpoch with block which is not the last block of current epoch ", async function () {
      // header of 498 block (should be 499)
      let rawHeader = "0xf90288a0872f4613ccfe39600d803e743721a7709d149643719158b82e368433b3ac994ea01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347946a708455c8777630aac9d1e7702d13f7a865b27ca0409a47c2411320dd032bbc2473f674d0563d71275233300dba318dc9168f1265a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421b9010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018201f2849d5f3637808461695e99b890d883010a04846765746888676f312e31372e31856c696e757800000000000000f86ef86994258af48e28e4a6846e931ddff8e1cdf8579821e5946a708455c8777630aac9d1e7702d13f7a865b27c948c09d936a1b408d6e0afaa537ba4e06c4504a0ae94ad3bf5ed640cc72f37bd21d64a65c3c756e9c88c94c095448424a5ecd5ca7ccdadfaad127a9d7e88ec80c080a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000"
      let rawSeals = "0xf9010cb841e5e7ed06125bc214c34c6f2642789cf2b603f4278d0fb03d03cedda56ddfa7f12a67828f728ee45d00ba06a624c8e53b7d7edd8c47e1b9491303b1db5421b2eb01b84127630fa0d93c8cd447cb00f314ac53c61bf921e6797cad2c7f43b24952f7e9b67363780b6e4276873b355deead8ed7f511251a4f60f973b2f81eef18f0e6ffff01b8416626bb3903b20645ef22a5aa1354489087b4d17371a47dfed8aa5e9ca38c182d179db2be895a140ba2e4b2b99e56e7fa4fa2641a0ee0c873d50e6dc9dc972f9101b8415f3acc523159be290987bf5ec2e598730fc7dfedb5ce751d01a6e5a484de0307547ec84c8187c7ed7b232897f7dd3e2ac04aa44c29a06ddd2a1e0cccbc14300001"
      let accountProof = "0xb90292f901d1a03fcc929cd4de4523a85947f2901e7b2ebb40ed7e7b798ed4dbc38b1dc3bd0966a0ef1dcf53a29d51cd14fdc15753f8ac43ead21346da51c025cb37f4f62bbebf10a00955fb784f4a8d1e30f07fd7d682372f0d5978eb44236f2a3d907838da784591a0f26805664e0d3f255895f6df167a0d6cb556d0832550cab5e18ecef69fea658fa0c891ca4bcc13742bc9bdd9d7e248f1be80a59250a47549e2f4ad7d191a8c817aa0cb72678be243c86782166cbc930f482676b31ee7d4dd8f257d8fa5a5e78dfeb7a06100793bd06c3330f0b94d5c43db5d566c52fecb2ea6e5429d62483872b38db8a00d4acd3af141cfd38da59ed14f4dd4d6a1dc2e99d8b7d476265c6d2508e9fec2a03c25c9a779dc8ba29602e0d31fefccd0cdc2fe7cabe850e942c2e24b1ae04c52a0390310f48aaa4eb61cf64028096cebbce67fb5c8e977597645e5859237dfbce580a04bae44fb6eaa5adb4f2e43d5e984e3a496b58af2ead4cd98a5caf4aefb1e18eba062e4745a57b0201f3072f3638ccbe6c1d178a329d8f022ddf528ecaf0ee25aeba0564ecd4bf55660eed16eae45d18d7dcca864b56c5b189d551343b7075ff93a2780a0ca91e00d100dad27686303885a960221f8bd9e866205e79bdbdf39abf6b5bf4f80f85180808080a009eb35187e05f400b56b85f8a44a7ca5aa70463a494e1f23681977467d2015038080a0a5c67cad3d75ba041d439a056bd377f41419037f4cffd47cb5c1bfa6a65efa5b808080808080808080f869a020c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbffb846f8440180a0515139c9782416f9159f0b18bec9a5d6048a78a1a84679d488a38bf634c8e3aea0f4c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbff"
      let storageproof = "0xb9034cf90211a069a0a4b2fe0b85549530560441960454e5769bf2d5e1e8c01dfe9ee5436e0d98a0d43d638ef5109dde76bc6e71ec1dd51814e6e2f810d0dfa1c967156dfad05079a0b9f8db8696069430452ee61f45902818b0cbbb63f467f98712ab719a08a67dfea080e112ada318ccffdf7ae9a009ab65b84fef37ff932d20af5b8f36aef9ff19c3a0a4fe41d4d0c12c9a73a4fcb0d7cb6f42d34e82fdbad4decbb2110ed06b43ece4a039dadc311e9616480282fc28754957869640e6ae61b19f5f2148d76ac6f7ddffa005e54f9f3ec081657eaa2470cc998cac034ac780cc8e77a2638a613b5d3e09bfa0fa4fa2d4a5908f4eed095933ae60034e65db174d3d4ad0552fc12709cacc1df4a04a3d583558e5b9c6d797286c0386f184ace84dea20c11ad59c4732b9f15328f3a026b0f5075008df26169468bcb236edb0048290334a86c028945c37bbe3705d71a0c2badb590ef361bcf428ee12f96ae02c141242f5ecad6ce5ccf58815071fdca9a001fab3e0f1a51e29fbf6ab84d92d31f82670ce54575875dba913b03bb525fa20a0548e309319d0b254f884bbfc5625a31e80a4427207d119e1035b7f16ca88c8d7a04830c80e8905602d078205d5fb0dd2bf761aecb7ed1988b9be71b4a502de8750a04e3ce211f7f2abd2acc13dff998fa501d7a4e3b69a25d6588a4077f6b081b13ba0d844bef2b4bb91ec2cd98c5ad849590dc85e0fcb59d80b4267e16682f12320d280f8f1a0405965c5cc1d613b1556e3c56fb96458f7529e996a6f98eae5b233aab575cba480a040cd7da4d779b8975af82ce0c16ee3b70e5536d212f1477951841290b941805980a077e58893644715d3c57adb8c95030acdd2a5a4ccbb89d3f2aa5ae5c40ab512dc8080a0b79880a0fd018c5344dffc1e7ea50d87bb17825c744c3d8c2f4879cabd6cb350a087945e6534c4676163320f08be4fc735d25c6e5df34631fb4ae44cc48b121caba0883727dc1869417c6408a72e8a9aa2d7f782f76249a95e18525c7ae80fc8671880808080a077a95f5c622b1a6b34a2325907911078b4c982c94c6a5c9a225ee3fb0534be2d8080f843a02011996e9d8a6127e10f3f192c3eb9cb572a1a05dd7159eaaf1e509797580b0fa1a001bb273799e71193ba92394140a7d4c9cc6f038887082d089de5530ad9a29ea0"
      let nextEpochInfo = "0xf9029503f9028ef9028bf85bb844307830326330376662376434386561633535396132343833653234396432373834316331386337636535646262626632373936613639363363633963656632376361626494258af48e28e4a6846e931ddff8e1cdf8579821e5f85bb8443078303266353133356165303835336166373166303137613865636236386537323062373239616239326337313233633638366537356237343837643461353761653037946a708455c8777630aac9d1e7702d13f7a865b27cf85bb8443078303365636163306562653732323463666430343035366339343036303561346139643463623033363763663538313962663765353530326266343466363862646434948c09d936a1b408d6e0afaa537ba4e06c4504a0aef85bb844307830336430656366643039646236623165346635396461376562646538663663336561336564303966303666353139303437376165346565353238656336393266613894ad3bf5ed640cc72f37bd21d64a65c3c756e9c88cf85bb844307830323434653530393130333434356435653866643239303630383330386431366430386337333936353564363939343235346534313362633161303637383338353694c095448424a5ecd5ca7ccdadfaad127a9d7e88ecf85bb844307830323338383464653239313438353035613864383632393932653537323137363764346234376666353266666162346332643235323731383264383132613664393594d47a4e56e9262543db39d9203cf1a2e53735f834f85bb844307830336238333866613233383762656233613536616564383665343437333039663838343463623230383338376336336166363461643734303732396235633061323794bfb558f0dceb07fbb09e1c283048b551a43109218201f4"
      
      expect(await eccd.getCurEpochId()).to.equal(2);
      await expect(ccm.connect(addr1).changeEpoch(rawHeader, rawSeals, accountProof, storageproof, nextEpochInfo)).to.be.revertedWith("Given block must be the last block of current epoch");
    });

    // TODO
    it("Should success when try to call changeEpoch with correct header & seals & proof & epochInfo ", async function () {
      let rawHeader = "0xf90288a0a23bf3b70c42c0e0a63703a6dc3499e1214d2af3bb3c6a48b3204fdb208be44aa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347948c09d936a1b408d6e0afaa537ba4e06c4504a0aea0409a47c2411320dd032bbc2473f674d0563d71275233300dba318dc9168f1265a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bf3849d37de6b808461695e9ab890d883010a04846765746888676f312e31372e31856c696e757800000000000000f86ef86994258af48e28e4a6846e931ddff8e1cdf8579821e5946a708455c8777630aac9d1e7702d13f7a865b27c948c09d936a1b408d6e0afaa537ba4e06c4504a0ae94ad3bf5ed640cc72f37bd21d64a65c3c756e9c88c94c095448424a5ecd5ca7ccdadfaad127a9d7e88ec80c080a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000"
      let rawSeals = "0xf9010cb841b0e9aaec13e2fa8e7f3a24194f1efd533478d1a16673d64409340878bc882bcb5d89111cf0669085d0938ffe06ae67a45a2c1e5a6d7d3b93ea5551433812641a01b8419dc0b38ab186feec929cd1bcf8215353edaa73294569b3f718d1ba849e4b47252f69d48bfe1eefb0690cad8289747d4556bba3e952614836d5f8084527290e7600b8419a9f172e46b1234465b96bdfb0a2cf971662ad3f94911ba9082013f78262e6fc04c08c8d3b99f42bdc5d5e0fb7c8b67e5807bf168e64bcbb240b8f1584a74fd601b841867de707c4cc0dbd733a96259652480279c016019070a53887fe004b9c2b0d923f1d5ecbcb556a03d7a153cfac95448955af80b27321d7869f9ad18fd2b7747e00"
      let accountProof = "0xb90292f901d1a03fcc929cd4de4523a85947f2901e7b2ebb40ed7e7b798ed4dbc38b1dc3bd0966a0ef1dcf53a29d51cd14fdc15753f8ac43ead21346da51c025cb37f4f62bbebf10a00955fb784f4a8d1e30f07fd7d682372f0d5978eb44236f2a3d907838da784591a0f26805664e0d3f255895f6df167a0d6cb556d0832550cab5e18ecef69fea658fa0c891ca4bcc13742bc9bdd9d7e248f1be80a59250a47549e2f4ad7d191a8c817aa0cb72678be243c86782166cbc930f482676b31ee7d4dd8f257d8fa5a5e78dfeb7a06100793bd06c3330f0b94d5c43db5d566c52fecb2ea6e5429d62483872b38db8a00d4acd3af141cfd38da59ed14f4dd4d6a1dc2e99d8b7d476265c6d2508e9fec2a03c25c9a779dc8ba29602e0d31fefccd0cdc2fe7cabe850e942c2e24b1ae04c52a0390310f48aaa4eb61cf64028096cebbce67fb5c8e977597645e5859237dfbce580a04bae44fb6eaa5adb4f2e43d5e984e3a496b58af2ead4cd98a5caf4aefb1e18eba062e4745a57b0201f3072f3638ccbe6c1d178a329d8f022ddf528ecaf0ee25aeba0564ecd4bf55660eed16eae45d18d7dcca864b56c5b189d551343b7075ff93a2780a0ca91e00d100dad27686303885a960221f8bd9e866205e79bdbdf39abf6b5bf4f80f85180808080a009eb35187e05f400b56b85f8a44a7ca5aa70463a494e1f23681977467d2015038080a0a5c67cad3d75ba041d439a056bd377f41419037f4cffd47cb5c1bfa6a65efa5b808080808080808080f869a020c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbffb846f8440180a0515139c9782416f9159f0b18bec9a5d6048a78a1a84679d488a38bf634c8e3aea0f4c95f7e3729a6463454a092263f59f28afe9de8b074f0112ce5ebfcc9d5cbff"
      let storageproof = "0xb9034cf90211a069a0a4b2fe0b85549530560441960454e5769bf2d5e1e8c01dfe9ee5436e0d98a0d43d638ef5109dde76bc6e71ec1dd51814e6e2f810d0dfa1c967156dfad05079a0b9f8db8696069430452ee61f45902818b0cbbb63f467f98712ab719a08a67dfea080e112ada318ccffdf7ae9a009ab65b84fef37ff932d20af5b8f36aef9ff19c3a0a4fe41d4d0c12c9a73a4fcb0d7cb6f42d34e82fdbad4decbb2110ed06b43ece4a039dadc311e9616480282fc28754957869640e6ae61b19f5f2148d76ac6f7ddffa005e54f9f3ec081657eaa2470cc998cac034ac780cc8e77a2638a613b5d3e09bfa0fa4fa2d4a5908f4eed095933ae60034e65db174d3d4ad0552fc12709cacc1df4a04a3d583558e5b9c6d797286c0386f184ace84dea20c11ad59c4732b9f15328f3a026b0f5075008df26169468bcb236edb0048290334a86c028945c37bbe3705d71a0c2badb590ef361bcf428ee12f96ae02c141242f5ecad6ce5ccf58815071fdca9a001fab3e0f1a51e29fbf6ab84d92d31f82670ce54575875dba913b03bb525fa20a0548e309319d0b254f884bbfc5625a31e80a4427207d119e1035b7f16ca88c8d7a04830c80e8905602d078205d5fb0dd2bf761aecb7ed1988b9be71b4a502de8750a04e3ce211f7f2abd2acc13dff998fa501d7a4e3b69a25d6588a4077f6b081b13ba0d844bef2b4bb91ec2cd98c5ad849590dc85e0fcb59d80b4267e16682f12320d280f8f1a0405965c5cc1d613b1556e3c56fb96458f7529e996a6f98eae5b233aab575cba480a040cd7da4d779b8975af82ce0c16ee3b70e5536d212f1477951841290b941805980a077e58893644715d3c57adb8c95030acdd2a5a4ccbb89d3f2aa5ae5c40ab512dc8080a0b79880a0fd018c5344dffc1e7ea50d87bb17825c744c3d8c2f4879cabd6cb350a087945e6534c4676163320f08be4fc735d25c6e5df34631fb4ae44cc48b121caba0883727dc1869417c6408a72e8a9aa2d7f782f76249a95e18525c7ae80fc8671880808080a077a95f5c622b1a6b34a2325907911078b4c982c94c6a5c9a225ee3fb0534be2d8080f843a02011996e9d8a6127e10f3f192c3eb9cb572a1a05dd7159eaaf1e509797580b0fa1a001bb273799e71193ba92394140a7d4c9cc6f038887082d089de5530ad9a29ea0"
      let nextEpochInfo = "0xf9029503f9028ef9028bf85bb844307830326330376662376434386561633535396132343833653234396432373834316331386337636535646262626632373936613639363363633963656632376361626494258af48e28e4a6846e931ddff8e1cdf8579821e5f85bb8443078303266353133356165303835336166373166303137613865636236386537323062373239616239326337313233633638366537356237343837643461353761653037946a708455c8777630aac9d1e7702d13f7a865b27cf85bb8443078303365636163306562653732323463666430343035366339343036303561346139643463623033363763663538313962663765353530326266343466363862646434948c09d936a1b408d6e0afaa537ba4e06c4504a0aef85bb844307830336430656366643039646236623165346635396461376562646538663663336561336564303966303666353139303437376165346565353238656336393266613894ad3bf5ed640cc72f37bd21d64a65c3c756e9c88cf85bb844307830323434653530393130333434356435653866643239303630383330386431366430386337333936353564363939343235346534313362633161303637383338353694c095448424a5ecd5ca7ccdadfaad127a9d7e88ecf85bb844307830323338383464653239313438353035613864383632393932653537323137363764346234376666353266666162346332643235323731383264383132613664393594d47a4e56e9262543db39d9203cf1a2e53735f834f85bb844307830336238333866613233383762656233613536616564383665343437333039663838343463623230383338376336336166363461643734303732396235633061323794bfb558f0dceb07fbb09e1c283048b551a43109218201f4"
      
      expect(await eccd.getCurEpochId()).to.equal(2);
      await ccm.connect(addr1).changeEpoch(rawHeader, rawSeals, accountProof, storageproof, nextEpochInfo);
      expect(await eccd.getCurEpochId()).to.equal(3);
    });
    
    

    // TODO
    // verifyHeaderAndExecuteTx
    it("Should success when try to call verifyHeaderAndExecuteTx with correct header & seals & proof & crossTx ", async function () {
    });
    
    // TODO
    it("Should fail when try to call verifyHeaderAndExecuteTx with incorrect header ", async function () {
    });
    
    // TODO
    it("Should fail when try to call verifyHeaderAndExecuteTx with incorrect seals ", async function () {
    });
    
    // TODO
    it("Should fail when try to call verifyHeaderAndExecuteTx with incorrect proof ", async function () {
    });
    
    // TODO
    it("Should fail when try to call verifyHeaderAndExecuteTx with incorrect crossTx ", async function () {
    });


  });
});


async function updateConst(eccd, callerFactory) {
  // const polyChainId = await getPolyChainId();
  polyChainId = 2;

  await fs.writeFile('./contracts/core/cross_chain_manager/logic/Const.sol', 
  'pragma solidity ^0.5.0;\n'+
  'contract Const {\n'+
  '    bytes constant ZionCrossChainManagerAddress = hex"5747C05FF236F8d18BB21Bc02ecc389deF853cae"; \n'+
  '    bytes constant ZionValidaterManagerAddress = hex"A4Bf827047a08510722B2d62e668a72FCCFa232C"; \n'+
  '    address constant EthCrossChainDataAddress = '+eccd+'; \n'+
  '    address constant EthCrossChainCallerFactoryAddress = '+callerFactory+'; \n'+
  '    uint constant chainId = '+polyChainId+'; \n}', 
  function(err) {
    if (err) {
        return console.error(err);
    }
  }); 
}

